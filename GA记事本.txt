遗传算法（Genetic Algorithm, GA）
模仿自然界生物进化机制发展起来的随机全局搜索和优化方法，借鉴了达尔文的进化论和孟德尔的遗传学说。模拟自然进化过程搜索最优解
高效、并行、全局  自适应地控制搜索过程以求得最佳解

基因型(genotype)：性状染色体的内部表现；

表现型(phenotype)：染色体决定的性状的外部表现，或者说，根据基因型形成的个体的外部表现；

进化(evolution)：种群逐渐适应生存环境，品质不断得到改良。生物的进化是以种群的形式进行的。

适应度(fitness)：度量某个物种对于生存环境的适应程度。

选择(selection)：以一定的概率从种群中选择若干个个体。一般，选择过程是一种基于适应度的优胜劣汰的过程。

复制(reproduction)：细胞分裂时，遗传物质DNA通过复制而转移到新产生的细胞中，新细胞就继承了旧细胞的基因。

交叉(crossover)：两个染色体的某一相同位置处DNA被切断，前后两串分别交叉组合形成两个新的染色体。也称基因重组或杂交；

变异(mutation)：复制时可能（很小的概率）产生某些复制差错，变异产生新的染色体，表现出新的性状。

编码(coding)：DNA中遗传信息在一个长链上按一定的模式排列。遗传编码可看作从表现型到基因型的映射。

解码(decoding)：基因型到表现型的映射。

个体（individual）：指染色体带有特征的实体；

种群（population）：个体的集合，该集合内个体数称为种群
==============================================================
遗传算法实现一般步骤
1.评估每条染色体所对应个体的适应度；
2.遵照适应度越高，选择概率越大的原则，从种群中选择两个个体作为父方和母方；
3.抽取父母双方的染色体，进行交叉，产生子代；
4.对子代的染色体进行变异；
5.重复2，3，4步骤，直到新种群的产生。
==============================================================
1.基因编码
二进制编码法/浮点数编码法
目的是建立表现型与基因型的映射关系，表现型理解为个体的特征。在解决具体的问题时，不用考虑研究对象其他特征，仅需要关注其中一件即可，就比如位置信息。思想：具体问题抽象为数学模型，突出主要矛盾，舍弃次要矛盾。

2.基因适应度评估
整个问题的衡量标准，比如TSP问题的适应度衡量标准就是位置和信息

3.基因选择
轮盘赌（Roulette Wheel Selection）选择法：个体适应度占适应度之和的概率

4.基因变异
基因交叉与基因突变是子代不同于父代的根本原因
二进制编码的基因交换过程非常类似高中生物中所讲的同源染色体的联会过程――随机把其中几个位于同一位置的编码进行交换，产生新的个体。
基因突变过程：基因突变是染色体的某一个位点上基因的改变。


编码原则
完备性（completeness）：问题空间的所有解都能表示为所设计的基因型；
健全性（soundness）：任何一个基因型都对应于一个可能解；
非冗余性（non-redundancy）：问题空间和表达空间一一对应。

适应度函数的重要性：适应度函数的选取直接影响遗传算法的收敛速度以及能否找到最优解。一般而言，适应度函数是由目标函数变换而成的。

适应度函数设计不当有可能出现欺骗问题：
（1）进化初期，个别超常个体控制选择过程；
（2）进化末期，个体差异太小导致陷入局部极值。

1. 选择的作用：优胜劣汰，适者生存；
2. 交叉的作用：保证种群的稳定性，朝着最优解的方向进化；
3. 变异的作用：保证种群的多样性，避免交叉可能产生的局部收敛。


=========================================================================
首先不考虑复杂的情形，即得到位置信息后，贴装头要移动遍历所有位置，保证位置最短；然后再加上条件判断；然后再考虑耦合的情况
=========================================================================




1.编码
（1）二进制编码

二进制编码的字符串长度与问题所求解的精度有关。需要保证所求解空间内的每一个个体都可以被编码。

优点：编、解码操作简单，遗传、交叉便于实现

缺点：长度大

（2）其他编码方法

格雷码、浮点数编码、符号编码、多参数编码等

2.适应度函数
适应度函数要有效反映每一个染色体与问题的最优解染色体之间的差距。

3.选择算子
通过选择算子模拟“优胜劣汰”，适应度高的个体被遗传到下一代的概率较大，适应度低的算子被遗传到下一代的概率较小。

常用的选择算法：轮盘赌选择法，即令表示群体的适应度函数值的总和，表示群体中第i个染色体的适应度值，则它产生后代的能力刚好为其适应度值所占的份额

4.交叉算子
交叉运算是指对两个相互配对的染色体按某种方式相互交换其部分基因，从而形成两个新的个体；
交叉运算是遗传算法区别于其他进化算法的重要特征，是产生新个体的主要方法。
在交叉之前需要将群体中的个体进行配对，一般采取随机配对原则。

常用的交叉方式：

单点交叉
双点交叉（多点交叉，交叉点数越多，个体的结构被破坏的可能性越大，一般不采用多点交叉的方式）
均匀交叉
算术交叉
5.变异算子
遗传算法中的变异运算是指将个体染色体编码串中的某些基因座上的基因值用该基因座的其他等位基因来替换，从而形成一个新的个体。

就遗传算法运算过程中产生新个体的能力方面来说，交叉运算是产生新个体的主要方法，它决定了遗传算法的全局搜索能力；而变异运算只是产生新个体的辅助方法，但也是必不可少的一个运算步骤，它决定了遗传算法的局部搜索能力。交叉算子与变异算子的共同配合完成了其对搜索空间的全局搜索和局部搜索，从而使遗传算法能以良好的搜索性能完成最优化问题的寻优过程。

6.运行参数
编码长度。编码长度取决于问题解的精度，精度越高，编码越长；
种群规模。规模小，收敛快但降低了种群的多样性，；
交叉概率。较大的交叉概率容易破坏种群中已形成的优良结构，使搜索具有太大随机性；较小的交叉概率发现新个体的速度太慢，一般取值为
变异概率。变异概率太小，则变异操作产生新个体的能力和抑制早熟现象的能力会较差；变异概率过高随机性过大，一般建议取值范围为0.005～0.01
终止进化代数。算法运行结束的条件之一，一般取100～1000



//大话遗传算法 含MATLAB代码
https://blog.csdn.net/acelit/article/details/78187715?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control&dist_request_id=1328769.57312.16176018948526639&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control

//遗传算法 求解旅行商 TSP 问题，matlab代码
https://chenzhen.blog.csdn.net/article/details/53003300?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-12.control&dist_request_id=1328767.57736.16176051969300833&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-12.control

//遗传算法解决TSP问题MATLAB实现（详细）
https://blog.csdn.net/xyisv/article/details/86741983?utm_medium=distribute.pc_relevant_download.none-task-blog-2~default~BlogCommendFromBaidu~default-3.nonecase&dist_request_id=&depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-2~default~BlogCommendFromBaidu~default-3.nonecas

